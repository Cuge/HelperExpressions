<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="EnvDTE" #>  
<#@ assembly name="$(SolutionDir)\T4HelperMethods\bin\Release\T4HelperMethods.dll" #>  
<#@ import namespace="T4HelperMethods" #>
<#@ import namespace="EnvDTE" #>  
<#@ import namespace="System.IO" #>  
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.CodeDom.Compiler" #>
<#@ output extension=".cs" #> 
<# 
// Get the Visual Studio API as a service:  
var host = this.Host;
DTE dte = ((IServiceProvider)host).GetService(typeof(DTE)) as DTE;    
var project = dte.Solution.FindProjectItem(host.TemplateFile).ContainingProject as EnvDTE.Project; 
string myFile = File.ReadAllText(host.ResolvePath("Additional.cs.include"));  
var manager = new T4BlockManager(host, GenerationEnvironment, false) { OutputPath = Path.GetDirectoryName(Host.TemplateFile) }; 
var envDteHelper = new EnvHelperMethods(Host);
var allClasses = envDteHelper.GetCodeClasses(project.ProjectItems); 
#>
// Total Project Count <#=  dte.Solution.Projects.Count #>
// Total Clases is <#= allClasses.Count #>

<# manager.StartHeader(); #>
//This is generated file, please do not edit by hand
//Weihua Li
<# manager.EndHeader(); #>
<# manager.StartFooter(); #>
<# manager.EndFooter(); #>
<# 
foreach(CodeClass curClass in allClasses)
{
	manager.StartBlock(host.TemplateFile + "." + curClass.FullName + ".cs"); 
	manager.EndBlock(); 
}
#>



<# manager.Process(true); #>
